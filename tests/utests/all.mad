--[=[
 o-----------------------------------------------------------------------------o
 |
 | MAD application test suites
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide regression test suites for the MAD application

 o-----------------------------------------------------------------------------o
]=]

-- modules --------------------------------------------------------------------o

-- list of test suites (see src/madl_main.mad)
local modules = {
  'luaunitext', 'luacore', 'luagmath', --[['luaobject',]] 'intable', 'lambda',
  --[['typeid',]] 'constant', 'gfunc', 'gmath', 'gutil',
  'range', 'logrange', 'complex', 'matrix', 'cmatrix',
  'mono', 'tpsa', -- 'ctpsa', 'mapflow', 'cmapflow',
  'object', 'command', 'beam', 'element', 'sequence', 'mtable',
  'geomap', 'survey',
  'track_ptc',
  -- 'dynmap', 'symint',
  -- 'track', -- long to load, to retore!!!
  'cofind', 'twiss', 'match',

  --[['madx',]] 'plot', 'srvplot',
}

-- allow global access
MAD.strict(false)

-- load test suites
for _,v in ipairs(modules) do
  modules[v] = require(v)
end

-- control display of custom objects during tests
MAD:export('tostring', true)

-- check for unexpected global access
MAD.strict()

-- run test suites
local status = MAD.utest.LuaUnit.run()

-- collect tests
local testname = MAD.utest.LuaUnit.collectTests()

-- build dict
MAD.utility.setkeys(testname)

-- check for unexpected globals
MAD.checkglobal(testname)

-- exit status, run finalizer
os.exit( status, true )
