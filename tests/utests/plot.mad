--[=[
 o-----------------------------------------------------------------------------o
 |
 | Plot module regression tests
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 |          A.Z. Teska, aleksandra.teska at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide regression test suites for the plot module.

 o-----------------------------------------------------------------------------o
]=]

local plot in MAD
local track, beam, functor, option in MAD

-- locals ---------------------------------------------------------------------o

local tbl2 = MAD.mtable 'to_plot'{ {'name'}, 'x', 'y', 'z' }
tbl2 = tbl2 + {'d', 0 , 0 *2, 0 *3}
tbl2 = tbl2 + {'d', 1 , 1 *2, 1 *3}
tbl2 = tbl2 + {'d', 2 , 2 *2, 2 *3}
tbl2 = tbl2 + {'d', 3 , 3 *2, 3 *3}
tbl2 = tbl2 + {'d', 4 , 4 *2, 4 *3}
tbl2 = tbl2 + {'d', 5 , 5 *2, 5 *3}
tbl2 = tbl2 + {'d', 6 , 6 *2, 6 *3}
tbl2 = tbl2 + {'d', 7 , 7 *2, 7 *3}
tbl2 = tbl2 + {'d', 8 , 8 *2, 8 *3}
tbl2 = tbl2 + {'d', 9 , 9 *2, 9 *3}
tbl2 = tbl2 + {'d', 10, 10*2, 10*4}

local tbl3 = MAD.mtable 'to_plot'{ {'name'}, 'x', 'y', 'z', 'a' }
tbl3 = tbl3 + {'d', 0 , 0 *2, 0 *3, 0 *5}
tbl3 = tbl3 + {'d', 1 , 1 *2, 1 *3, 1 *5}
tbl3 = tbl3 + {'d', 2 , 2 *2, 2 *3, 2 *5}
tbl3 = tbl3 + {'d', 3 , 3 *2, 3 *3, 3 *5}
tbl3 = tbl3 + {'d', 4 , 4 *2, 4 *3, 4 *5}
tbl3 = tbl3 + {'d', 5 , 5 *2, 5 *3, 5 *5}

local inp_k = {'x'}
local out_k = {'y', 'z'}
local keys  = {'x', 'y', 'z'}

plot( tbl2, {'x'}, {'y', 'z'} )

--[[
local survey, option in MAD
local track, beam, functor, option in MAD
local assertNil, assertNotNil, assertTrue, assertEquals in MAD.utest
local function loadLHC()
  assertNotNil(require 'lhc_as-built_gen')
  assertNotNil(require 'lhc_as-built_set')
  assertNotNil(require 'lhc_undefvar'    )
  assertNotNil(require 'opt_inj_gen'     )

  local lhcb1, lhcb2 in MADX
  assertEquals(#lhcb1, 6675)
  assertEquals(#lhcb2, 6674)
  return lhcb1, lhcb2
end

local lhcb1, lhcb2 = loadLHC()
local beam = beam { particle='proton', energy=450 }
local tbl, map = track { sequence=lhcb1, beam=beam }
tbl:write('track_lhcb1')

plot( tbl, {'s', 'px'}, {'s'}, {'px'} )
]]

-- end ------------------------------------------------------------------------o
