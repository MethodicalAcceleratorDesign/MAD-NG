--[=[
 o-----------------------------------------------------------------------------o
 |
 | Matrix module regression tests - data for complex matrices
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 |          A.Z. Teska, aleksandra.teska at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide matlab created output regression test suites for the matrix module.

 o-----------------------------------------------------------------------------o
]=]

local complex, vector, cvector, matrix, cmatrix, linspace, logspace in MAD
local is_vector, is_matrix, is_cvector, is_cmatrix, isa_vector, isa_matrix
      in MAD.typeid

local infi, tiny, eps, huge, inf, nan, pi, sqrt in MAD.gmath

-- locals ---------------------------------------------------------------------o

local M = {}

-- linear algebra -------------------------------------------------------------o

-- eigen
M.eigenIn = {
}

-- w (values)
M.eigenD = {
}

-- vr
M.eigenV = {
}

-- vl
M.eigenW = {
}

-- svd
M.svdIn = {
}

M.svdU = {
}

M.svdS = {
}

M.svdV = {
}

-- solve
M.solveIn1 = {
}

M.solveIn2 = {
}

M.solveOut = {
}

-- FFT ------------------------------------------------------------------------o

M.sv = { 1, 2, 3, 4, 5, 7, 9, 11, 13, 19, 25 }
M.sm = { 2, 5, 7 }

M.fftVIn = vector{1
}

M.fftVOut = {
}

M.fftMIn = matrix {
1}

M.fftMOut = {
}

-- rotations ------------------------------------------------------------------o

local r4, r3 = sqrt(2)/2,  sqrt(3)/2

M.rad = { pi/6, pi/4, pi/3, pi/2, pi }

M.rot = {
}

M.rotx = {
}

M.roty = {
}

M.rotz = {
}

-- end ------------------------------------------------------------------------o

return M
