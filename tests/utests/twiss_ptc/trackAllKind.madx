option, -echo, -info, -rbarc ;

/* Run and data extraction assuming mapdump=2 in the script below.
cd track_ref
../madx64 trackAllKind.madx > trackAllKindPtc.out 2>&1
grep "^@@\|%%" trackAllKindPtc.out > trackAllKindPtc_res.txt
cd ..
*/

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!
!! setup
!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

singlefile=0; debug=0; dotwiss=1; mapdump=0; !onlycfgid=8; !294; !1304; !872;


no=5; icase=56;
x0=3e-3; px0=-2e-4; y0=-2e-3; py0=3e-4; t0=1e-5; pt0=2e-5;

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!
!! prepare tables: Cptc, Cptc_cfg and Cptc_tmp
!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

call, file="trackAllKind_macro.madx" ;

! create tables
exec, prpt(Cptc) ;

! fill Cptc_cfg:
! "cfgid","model","energy","tilt","tpath","method","nslice","eon","x0i"

cfgid  = 1;
model  = 1;  while (model  <= 2   ) {
energy = 1;  while (energy <= 6500) {
tilt   = 0;  while (tilt   <= 2   ) {
tpath  = 0;  while (tpath  <= 1   ) {
method = 2;  while (method <= 6   ) {
nslice = 1;  while (nslice <= 3   ) {
eon    = 0;  while (eon    <= 1   ) {
x0i    = 1;  while (x0i    <= 4   ) {

  fill, table = Cptc_cfg ; cfgid = cfgid + 1;

x0i    = x0i    + 1;    }
eon    = eon    + 1;    }
nslice = nslice + 1;    }
method = method + 2;    }
tpath  = tpath  + 1;    }
tilt   = tilt   + 1;    }
energy = energy + 6499; }
model  = model  + 1;    }

set, format=" -8.4g" ;
write, table=Cptc_cfg, file="Cptc_cfg.txt" ;
set, format=" -.16e" ;

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!
!! run the tests from Cptc_cfg, save the results in Cptc.txt
!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! TODO: trueRBEND, RFMULTIPOLE, CRABCAVITY, BEAMBEAM, ELSEPARATOR, WIGGLER, ...
! TODO: all versions with knl, ksl...

seqDRIFT: sequence, l=4 ;
  DRIFT1: drift, at=0.75, l=1.5 ;
  DRIFT2: drift, at=3.25, l=1.5 ;
endsequence ;

! ------

seqSBEND: sequence, l=4 ;
  SBEND1: sbend, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, angle= 0.05*1.5, kill_ent_fringe=true, kill_exi_fringe=true ;
  SBEND2: sbend, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, angle=-0.05*1.5, kill_ent_fringe=true, kill_exi_fringe=true ;
endsequence ;

! ------

seqSBENDfr: sequence, l=4 ;
  SBENDfr1: sbend, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, angle= 0.05*1.5 ;
  SBENDfr2: sbend, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, angle=-0.05*1.5 ;
endsequence ;

! ------

seqSBENDfe: sequence, l=4 ;
  SBENDfe1: sbend, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, angle= 0.05*1.5, e1= 0.05*1.5/2.2, e2= 0.05*1.5/2.5 ;
  SBENDfe2: sbend, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, angle=-0.05*1.5, e1=-0.05*1.5/2.2, e2=-0.05*1.5/2.5 ;
endsequence ;

! ------

seqSBENDfh: sequence, l=4 ;
  SBENDfh1: sbend, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, angle= 0.05*1.5, e1= 0.05*1.5/2.2, e2= 0.05*1.5/2.5, hgap=0.05, fint=0.8, fringe=3 ;
  SBENDfh2: sbend, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, angle=-0.05*1.5, e1=-0.05*1.5/2.2, e2=-0.05*1.5/2.5, hgap=0.05, fint=0.8, fringe=3 ;
endsequence ;

! ------

seqSBENDfhs: sequence, l=4 ;
  SBENDfhs1: sbend, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, k1:= 0.25*e_on, k1s:=-0.2*e_on, angle= 0.05*1.5, e1= 0.05*1.5/2.2, e2= 0.05*1.5/2.5, hgap=0.05, fint=0.8, fringe=3 ;
  SBENDfhs2: sbend, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, k1:=-0.25*e_on, k1s:= 0.2*e_on, angle=-0.05*1.5, e1=-0.05*1.5/2.2, e2=-0.05*1.5/2.5, hgap=0.05, fint=0.8, fringe=3 ;
endsequence ;

! ------

seqRBEND: sequence, l=4 ;
  RBEND1: rbend, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, angle= 0.05*1.5, kill_ent_fringe=true, kill_exi_fringe=true ;
  RBEND2: rbend, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, angle=-0.05*1.5, kill_ent_fringe=true, kill_exi_fringe=true ;
endsequence ;

! ------

seqRBENDfr: sequence, l=4 ;
  RBENDfr1: rbend, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, angle= 0.05*1.5 ;
  RBENDfr2: rbend, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, angle=-0.05*1.5 ;
endsequence ;

! ------

seqRBENDfe: sequence, l=4 ;
  RBENDfe1: rbend, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, angle= 0.05*1.5, e1= 0.05*1.5/2.2, e2= 0.05*1.5/2.5 ;
  RBENDfe2: rbend, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, angle=-0.05*1.5, e1=-0.05*1.5/2.2, e2=-0.05*1.5/2.5 ;
endsequence ;

! ------

seqRBENDfh: sequence, l=4 ;
  RBENDfh1: rbend, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, angle= 0.05*1.5, e1= 0.05*1.5/2.2, e2= 0.05*1.5/2.5, hgap=0.05, fint=0.8, fringe=3 ;
  RBENDfh2: rbend, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, angle=-0.05*1.5, e1=-0.05*1.5/2.2, e2=-0.05*1.5/2.5, hgap=0.05, fint=0.8, fringe=3 ;
endsequence ;

! ------

seqRBENDfhs: sequence, l=4 ;
  RBENDfhs1: rbend, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, k1:= 0.25*e_on, k1s:=-0.2*e_on, angle= 0.05*1.5, e1= 0.05*1.5/2.2, e2= 0.05*1.5/2.5, hgap=0.05, fint=0.8, fringe=3 ;
  RBENDfhs2: rbend, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, k1:=-0.25*e_on, k1s:= 0.2*e_on, angle=-0.05*1.5, e1=-0.05*1.5/2.2, e2=-0.05*1.5/2.5, hgap=0.05, fint=0.8, fringe=3 ;
endsequence ;

! ------

seqQUAD: sequence, l=4 ;
  QUAD1: quadrupole, at=0.75, l=1.5, tilt:=e_tlt, k1:= 0.25*e_on ;
  QUAD2: quadrupole, at=3.25, l=1.5, tilt:=e_tlt, k1:=-0.25*e_on ;
endsequence ;

! ------

seqQUADs: sequence, l=4 ;
  QUADs1: quadrupole, at=0.75, l=1.5, tilt:=e_tlt, k1:= 0.25*e_on, k1s:=-0.2*e_on ;
  QUADs2: quadrupole, at=3.25, l=1.5, tilt:=e_tlt, k1:=-0.25*e_on, k1s:= 0.2*e_on ;
endsequence ;

! ------

seqQUADf: sequence, l=4 ; ! Note: MAD-X PTC cannot handle correctly k1s and fringe
  QUADf1: quadrupole, at=0.75, l=1.5, tilt:=e_tlt, k1:= 0.25*e_on, fringe=3 ;
  QUADf2: quadrupole, at=3.25, l=1.5, tilt:=e_tlt, k1:=-0.25*e_on, fringe=3 ;
endsequence ;

! ------

seqQUADfh: sequence, l=4 ; ! Note: MAD-X PTC cannot handle correctly k1s and fringe
  QUADfh1: quadrupole, at=0.75, l=1.5, tilt:=e_tlt, k0:= 0.05*e_on, k1:= 0.25*e_on, fringe=3, bend_fringe=true ;
  QUADfh2: quadrupole, at=3.25, l=1.5, tilt:=e_tlt, k0:=-0.05*e_on, k1:=-0.25*e_on, fringe=3, bend_fringe=true ;
endsequence ;

! ------

seqSEXT: sequence, l=4 ;
  SEXT1: sextupole, at=0.75, l=1.5, tilt:=e_tlt, k2:= 0.25*e_on ;
  SEXT2: sextupole, at=3.25, l=1.5, tilt:=e_tlt, k2:=-0.25*e_on ;
endsequence ;

! ------

seqSEXTs: sequence, l=4 ;
  SEXTs1: sextupole, at=0.75, l=1.5, tilt:=e_tlt, k2:= 0.25*e_on, k2s:=-0.2*e_on ;
  SEXTs2: sextupole, at=3.25, l=1.5, tilt:=e_tlt, k2:=-0.25*e_on, k2s:= 0.2*e_on ;
endsequence ;

! ------

seqSEXTfs: sequence, l=4 ;
  SEXTfs1: sextupole, at=0.75, l=1.5, tilt:=e_tlt, k2:= 0.25*e_on, k2s:=-0.2*e_on, fringe=3 ;
  SEXTfs2: sextupole, at=3.25, l=1.5, tilt:=e_tlt, k2:=-0.25*e_on, k2s:= 0.2*e_on, fringe=3 ;
endsequence ;

! ------

seqOCTU: sequence, l=4 ;
  OCTU1: octupole, at=0.75, l=1.5, tilt:=e_tlt, k3:= 0.25*e_on ;
  OCTU2: octupole, at=3.25, l=1.5, tilt:=e_tlt, k3:=-0.25*e_on ;
endsequence ;

! ------

seqOCTUs: sequence, l=4 ;
  OCTUs1: octupole, at=0.75, l=1.5, tilt:=e_tlt, k3:= 0.25*e_on, k3s:=-0.2*e_on ;
  OCTUs2: octupole, at=3.25, l=1.5, tilt:=e_tlt, k3:=-0.25*e_on, k3s:= 0.2*e_on ;
endsequence ;

! ------

seqOCTUfs: sequence, l=4 ;
  OCTUfs1: octupole, at=0.75, l=1.5, tilt:=e_tlt, k3:= 0.25*e_on, k3s:=-0.2*e_on, fringe=3 ;
  OCTUfs2: octupole, at=3.25, l=1.5, tilt:=e_tlt, k3:=-0.25*e_on, k3s:= 0.2*e_on, fringe=3 ;
endsequence ;

! ------

seqMULT: sequence, l=4 ;
  MULT1: multipole, at=0.75, lrad=1.5, tilt:=e_tlt, knl:={ 0.05*1.5*e_on, 0.25*1.5*e_on}, angle= 0.05*1.5*e_on ;
  MULT2: multipole, at=3.25, lrad=1.5, tilt:=e_tlt, knl:={-0.05*1.5*e_on,-0.25*1.5*e_on}, angle=-0.05*1.5*e_on ;
endsequence ;

! ------

seqMULTs: sequence, l=4 ;
  MULTs1: multipole, at=0.75, lrad=1.5, tilt:=e_tlt, knl:={ 0.05*1.5*e_on, 0.25*1.5*e_on}, ksl:={-0.05*1.5*e_on,-0.2*1.5*e_on}, angle= 0.05*1.5*e_on ;
  MULTs2: multipole, at=3.25, lrad=1.5, tilt:=e_tlt, knl:={-0.05*1.5*e_on,-0.25*1.5*e_on}, ksl:={ 0.05*1.5*e_on, 0.2*1.5*e_on}, angle=-0.05*1.5*e_on ;
endsequence ;

! ------

seqDECA: sequence, l=4 ;
  DECA1: multipole, at=0.75, lrad=1.5, tilt:=e_tlt, knl:={0,0,0,0, 0.25*1.5*e_on} ;
  DECA2: multipole, at=3.25, lrad=1.5, tilt:=e_tlt, knl:={0,0,0,0,-0.25*1.5*e_on} ;
endsequence ;

! ------

seqDODECA: sequence, l=4 ;
  DODECA1: multipole, at=0.75, lrad=1.5, tilt:=e_tlt, knl:={0,0,0,0,0, 0.25*1.5*e_on} ;
  DODECA2: multipole, at=3.25, lrad=1.5, tilt:=e_tlt, knl:={0,0,0,0,0,-0.25*1.5*e_on} ;
endsequence ;

! ------

seqKICK: sequence, l=4 ;
  KICK1: kicker, at=0.75, l=1.5, tilt:=e_tlt, hkick:= 0.25*e_on, vkick:=-0.2*e_on ;
  KICK2: kicker, at=3.25, l=1.5, tilt:=e_tlt, hkick:=-0.25*e_on, vkick:= 0.2*e_on ;
endsequence ;

! ------

seqHKICK: sequence, l=4 ;
  HKICK1: hkicker, at=0.75, l=1.5, tilt:=e_tlt, kick:= 0.25*e_on ;
  HKICK2: hkicker, at=3.25, l=1.5, tilt:=e_tlt, kick:=-0.25*e_on ;
endsequence ;

! ------

seqVKICK: sequence, l=4 ;
  VKICK1: vkicker, at=0.75, l=1.5, tilt:=e_tlt, kick:=-0.25*e_on ;
  VKICK2: vkicker, at=3.25, l=1.5, tilt:=e_tlt, kick:= 0.25*e_on ;
endsequence ;

! ------

seqTKICK: sequence, l=4 ;
  TKICK1: tkicker, at=0.75, l=1.5, tilt:=e_tlt, hkick:= 0.25*e_on, vkick:=-0.2*e_on ;
  TKICK2: tkicker, at=3.25, l=1.5, tilt:=e_tlt, hkick:=-0.25*e_on, vkick:= 0.2*e_on ;
endsequence ;

! ------

seqSOL: sequence, l=4 ;
  SOL1: solenoid, at=0.75, l=1.5, ks:= 0.25*e_on ;
  SOL2: solenoid, at=3.25, l=1.5, ks:=-0.25*e_on ;
endsequence ;

! ------

seqSEP: sequence, l=4 ;
  SEP1: elseparator, at=0.75, l=1.5, ex:= 5*e_on ;
  SEP2: elseparator, at=3.25, l=1.5, ex:=-5*e_on ;
endsequence ;

! ------

seqSEPs: sequence, l=4 ;
  SEPs1: elseparator, at=0.75, l=1.5, ex:= 5*e_on, ey:=-3*e_on ;
  SEPs2: elseparator, at=3.25, l=1.5, ex:=-5*e_on, ey:= 3*e_on ;
endsequence ;

! ------

seqSEPls: sequence, l=4 ;
  SEPls1: elseparator, at=0.75, l=1.5, ex:= 5*e_on, ey:=-3*e_on, ex_l:= 7*e_on, ey_l:=-4*e_on ;
  SEPls2: elseparator, at=3.25, l=1.5, ex:=-5*e_on, ey:= 3*e_on, ex_l:=-7*e_on, ey_l:= 4*e_on ;
endsequence ;

! ------

seqCAV0: sequence, l=4 ;
  CAV01: rfcavity, at=0.75, l=0, volt:=8*e_on, freq=150, lag=0.6, no_cavity_totalpath=true ;
  CAV02: rfcavity, at=3.25, l=0, volt:=8*e_on, freq=150, lag=0.6, no_cavity_totalpath=true ;
endsequence ;

! ------

seqCAV0t: sequence, l=4 ;
  CAV0t1: rfcavity, at=0.75, l=0, volt:=8*e_on, freq=150, lag=0.6 ;
  CAV0t2: rfcavity, at=3.25, l=0, volt:=8*e_on, freq=150, lag=0.6 ;
endsequence ;

! ------

seqCAV: sequence, l=4 ;
  CAV1: rfcavity, at=0.75, l=1.5, volt:=8*e_on, freq=150, lag=0.6, no_cavity_totalpath=true ;
  CAV2: rfcavity, at=3.25, l=1.5, volt:=8*e_on, freq=150, lag=0.6, no_cavity_totalpath=true ;
endsequence ;

! ------

seqCAVt: sequence, l=4 ;
  CAVt1: rfcavity, at=0.75, l=1.5, volt:=8*e_on, freq=150, lag=0.6 ;
  CAVt2: rfcavity, at=3.25, l=1.5, volt:=8*e_on, freq=150, lag=0.6 ;
endsequence ;

! ------

seqCAVh: sequence, l=4 ;
  CAVh1: rfcavity, at=0.75, l=1.5, volt:=8*e_on, harmon=2, lag=0.6 ;
  CAVh2: rfcavity, at=3.25, l=1.5, volt:=8*e_on, harmon=2, lag=0.6 ;
endsequence ;

! ------

seqCAVb: sequence, l=4 ;
  CAVb1: rfcavity, at=0.75, l=1.5, volt:=8*e_on, freq=150, lag=0.6, n_bessel=3 ;
  CAVb2: rfcavity, at=3.25, l=1.5, volt:=8*e_on, freq=150, lag=0.6, n_bessel=3 ;
endsequence ;

! ------

option echo ;

nooff  = 1;
notilt = 1;
exec, rchk(Cptc, DRIFT  ) ;                                         ! checked OK

notilt = 0;
exec, rchk(Cptc, SBEND    ) ;                                       ! checked OK
exec, rchk(Cptc, SBENDfr  ) ; ! fringe                              ! checked OK
exec, rchk(Cptc, SBENDfe  ) ; ! fringe, e1, e2                      ! checked OK
exec, rchk(Cptc, SBENDfh  ) ; ! fringe, e1, e2, fint, hgap          ! checked OK
exec, rchk(Cptc, SBENDfhs ) ; ! fringe, e1, e2, fint, hgap, k1, k1s ! checked OK

exec, rchk(Cptc, RBEND    ) ;                                       ! checked OK
exec, rchk(Cptc, RBENDfr  ) ; ! fringe                              ! checked OK
exec, rchk(Cptc, RBENDfe  ) ; ! fringe, e1, e2                      ! checked OK
exec, rchk(Cptc, RBENDfh  ) ; ! fringe, e1, e2, fint, hgap          ! checked OK
exec, rchk(Cptc, RBENDfhs ) ; ! fringe, e1, e2, fint, hgap, k1, k1s ! checked OK

nooff = 0;
exec, rchk(Cptc, QUAD     ) ;                                       ! checked OK
exec, rchk(Cptc, QUADs    ) ;                                       ! checked OK
exec, rchk(Cptc, QUADf    ) ;                                       ! checked OK
exec, rchk(Cptc, QUADfh   ) ;                                       ! checked OK

exec, rchk(Cptc, SEXT     ) ;                                       ! checked OK
exec, rchk(Cptc, SEXTs    ) ;                                       ! checked OK
exec, rchk(Cptc, SEXTfs   ) ;                                       ! checked OK

exec, rchk(Cptc, OCTU     ) ;                                       ! checked OK
exec, rchk(Cptc, OCTUs    ) ;                                       ! checked OK
exec, rchk(Cptc, OCTUfs   ) ;                                       ! checked OK

notilt = 1;
exec, rchk(Cptc, MULT     ) ;                                       ! checked OK
exec, rchk(Cptc, MULTs    ) ;                                       ! checked OK
exec, rchk(Cptc, DECA     ) ;                                       ! checked OK
exec, rchk(Cptc, DODECA   ) ;                                       ! checked OK

notilt = 0;
exec, rchk(Cptc, KICK     ) ;                                       ! checked OK
exec, rchk(Cptc, HKICK    ) ;                                       ! checked OK
exec, rchk(Cptc, VKICK    ) ;                                       ! checked OK
exec, rchk(Cptc, TKICK    ) ;                                       ! checked OK

notilt = 1;
exec, rchk(Cptc, SEP      ) ;                                       ! checked OK
exec, rchk(Cptc, SEPs     ) ;                                       ! checked OK
exec, rchk(Cptc, SEPls    ) ;                                       ! checked OK
exec, rchk(Cptc, SOL      ) ;                                       ! checked OK

icase  = 6;                 ! switch to 6D for cavities
nooff  = 1;                 ! avoid to switch back to 56
exec, rchk(Cptc, CAV0     ) ;                                       ! checked OK
exec, rchk(Cptc, CAV0t    ) ;                                       ! checked OK
exec, rchk(Cptc, CAV      ) ;                                       ! checked OK
exec, rchk(Cptc, CAVt     ) ;                                       ! checked OK
exec, rchk(Cptc, CAVh     ) ;                                       ! checked OK
exec, rchk(Cptc, CAVb     ) ;                                       ! checked OK

! remove TKT model
! len = table(Cptc_cfg,tablelength) ;
! shrink, table=Cptc_cfg, row=len/2 ;

! cleanup
!removefile, file="internal_mag_pot.txt" ;

stop;
