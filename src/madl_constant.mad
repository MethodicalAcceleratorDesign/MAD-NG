--[=[
 o-----------------------------------------------------------------------------o
 |
 | Constant module
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide a set of math and physical constants

 o-----------------------------------------------------------------------------o
]=]

local M = { __help = {} }

-- help -----------------------------------------------------------------------o

M.__help.constant = [=[
NAME
  constant -- constants for math and physics

SYNOPSIS
  local const in MAD.constant

DESCRIPTION
  The module constant provides a set of math and physics constants. The physics
  constants are taken from the Particle Data Group publication.
  List of constants: pi, twopi, degrad, raddeg, clight, mu0, epsilon0, hbar,
  echarge, emass, pmass, nmass, mumass, eradius, pradius, nradius.

EXAMPLES
  local emass, clight in MAD.constant

SEE ALSO
  math.
]=]

M.__help['Particle Data Group References'] = [=[
PDG 2012: J. Beringer et al. (Particle Data Group), Phys. Rev. D86, 010001 (2012).
PDG 2014: K.A. Olive  et al. (Particle Data Group), Chin. Phys. C, 38, 090001 (2014).
CODATA OF FUNDAMENTAL PHYSICAL CONSTANTS: 2014, arXiv:1507.07956, Sep 2015.
]=]

-- locals ---------------------------------------------------------------------o

local pi     in math
local Object in MAD

-- implementation -------------------------------------------------------------o

local clight = 299792458

local constant = Object {
  minlen   = 1e-12,                             -- m   minimum length tolerance
  minang   = 1e-12,                             -- rad minimum angle  tolerance

  clight   = clight,                            -- m/s
  mu0      = 4e-7*pi,                           -- T.m/A (or N/A^2)
  epsilon0 = 1/(4e-7*pi*clight^2),              -- F/m
  qelect   = 1.602176620898e-19,                -- C
  hbar     = 6.58211951440e-25,                 -- GeV.s
  emass    = 0.510998946131e-3,                 -- GeV
  pmass    = 0.938272081358,                    -- GeV
  nmass    = 0.939565413358,                    -- GeV
  mumass   = 0.105658374524,                    -- GeV
  deumass  = 1.87561292812,                     -- GeV
  eradius  = 2.817940322719e-15,                -- m (electromagnetic radius)

} :set_variable { __help = M.__help, }
  :set_readonly()

-- end ------------------------------------------------------------------------o
return { constant = constant }
