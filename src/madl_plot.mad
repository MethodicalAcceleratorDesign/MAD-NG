--[=[
 o-----------------------------------------------------------------------------o
 |
 | Plot module
 |
 | Methodical Accelerator Design - Copyright CERN 2015+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 |          A.Z. Teska, aleksandra.teska at cern.ch
 | Contrib: F.R. Leiro
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provides ploting

 o-----------------------------------------------------------------------------o
]=]

local M = {}

-- help -----------------------------------------------------------------------o

local __help = {}

-- locals ---------------------------------------------------------------------o

local dat = require 'madl_plotdat'

local GP = {
  gp_output      = 'test.eps'      ,
  plot_data      = "datatoplot.dat",
  script         = "plotter.gp"    ,
  terminal_type  = "postscript eps",
  font_type      = "Times-Roman"   ,
  font_size      = 22              ,
  xsize          = 27              ,
  ysize          = 17              ,
}
--plot default values
local PD = {
  min_x = 0 ,
  max_x = 10,
  min_y = 0 ,
  max_y = 20,
}
-- implementation -------------------------------------------------------------o

local function plotter_gen(data_table, gplot_data, str1)
  for i=1,#data_table.x do
    gplot_data:write(data_table.x[i]," ",data_table.y[i]," \n")
    --gplot_data:write(data_table.x[i]," ",data_table.str[i]," \n")
  end
  gplot_data:close()
end


local function template_fill_string(temp, src)
  for k,v in pairs(src) do
    k = tostring(k)
    for j,t in ipairs(temp) do
      if t:find(k) then
        temp[j] = t:gsub( k, src[k] )
      end
    end
  end
  return temp
end

local function template_fill(temp, tofill, printer)
  for i,v in ipairs(tofill) do
    template_fill_string(temp, v)
  end
  for i =1,#temp do printer:write(temp[i]) end
  printer:close()
end

local template = {
    -- general settings
    "reset\n",
    "set terminal terminal_type size xsize cm, ysize cm color font 'font_type, font_size'\n",
    "set output 'gp_output'\n",
    -- plot data setting
    "set grid \n",
    "set xrange [min_x:max_x] \n",
    "set yrange [min_y:max_y] \n",
    -- plot data
    "plot 'plot_data' w lines \n",
}

-- plotting funtion -----------------------------------------------------------o

function M.plot(table)
  print("ploting file: "..GP.gp_output.."\n")

  local printer = io.open(GP.script   ,"w")
  local gp_file = io.open(GP.plot_data,"w")
  local tofill  = {GP, PD}

  plotter_gen  (table   , gp_file)
  template_fill(template, tofill, printer)


  os.execute("gnuplot "..GP.script)
end

-- end ------------------------------------------------------------------------o
return M