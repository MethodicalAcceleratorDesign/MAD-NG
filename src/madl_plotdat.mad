--[=[
 o-----------------------------------------------------------------------------o
 |
 | Shapes for plot module
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 |          A.Z. Teska, aleksandra.teska at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide the set of shapes for plotting the elements

 o-----------------------------------------------------------------------------o
]=]

local dat = {}

-- locals ---------------------------------------------------------------------o

local nl    = '\n'

--[[
  local sh = shape[elem.kind]
  local dat = sh.dat or elem[sh.str_k] >= 0 and sh.dat_f or sh.dat_d
]]

-- shapes -----------------------------------------------------------------------o

  --x  y
dat.sbend = {
  shape = {
    0,  0  ,
    0,  0.5,
    1,  0.5,
    1, -0.5,
    0, -0.5,
    0,  0  ,
  }
}

dat.quadrupole = {
  str_k   = 'k1',
  --shape_f = {
  shape = {
    0, 0,
    0, 1,
    1, 1,
    1, 0,
    0, 0,
  },
  shape_d = {
    0.,  0. ,
    1.,  0. ,
    1., -0.8,
    0., -0.8,
    0.,  0. ,
  },
}

dat.sextupole = {
  str_k   = 'k2',
  shape = {
    0  ,  0   ,  0  ,  0.5 ,
    0.5,  0.75,  1  ,  0.5 ,
    1  ,  0   ,  0.5, -0.25,
    0  ,  0   ,  0.5, -0.25,
    1  ,  0   ,
  },
  shape_d = {
    0. ,  0. ,  0. , -0.5,
    0.5, -0.8,  1. , -0.5,
    1. ,  0. ,  0.5,  0.3,
    0.,   0  ,
  },
}

dat.octupole = {
  str_k = 'k3',
  shape = {
    0.0,  0.0, 0.0,  0.5,
    0.2,  0.8, 0.8,  0.8,
    1.0,  0.5, 1.0,  0.0,
    0.8, -0.3, 0.2, -0.3,
    0.0,  0.0,
  },
  shape_d = {
    0.0,  0.0,  0.0, -0.5,
    0.2, -0.8,  0.8, -0.8,
    1.0, -0.5,  1.0, -0.0,
    0.8,  0.3,  0.2,  0.3,
    0.0,  0.0,
  },
}

dat.kicker = {
  shape = {
    0.0, 0.0, 0.5, 0.5,
    1.0, 0.0, 0.5,-0.5,
    0.0, 0.0,
  }
}
dat.tkicker = dat.kicker

dat.hkicker = {
  shape = {
    0.0,  0.0,  0.5,  0.5,
    1.0,  0.0,  0.0,  0.0,
    1.0,  0.0,
  }
}

dat.vkicker = {
  shape = {
    0.0,  0.0,  0.5, -0.5,
    1.0,  0.0,  0.0,  0.0,
    1.0,  0.0,
  }
}

dat.solenoid = {
  shape = {
    0.  ,  0.6,  1.  ,  0.6,
    1.  , -0.6,  0.  , -0.6,
    0.  ,  0.6,   --nl  ,
    0.  , -0.6,  0.25,  0.6, --nl,
    0.25, -0.6,  0.50,  0.6, --nl,
    0.50, -0.6,  0.75,  0.6, --nl,
    0.75, -0.6,  1.0 ,  0.6,
  }
}

dat.elseparator = {
  shape = {
    0. ,  0.4,  1. ,  0.4,  --nl,
    0.5,  0.8,  0.5,  0.4,  --nl,
    0. , -0.4,  1. , -0.4,  --nl,
    0.5, -0.8,  0.5, -0.4,  --nl
  }
}

dat.instrument = {
  shape = {
    0. , -0.9,  0. , -0.7,  --nl,
    0. , -0.5,  0. , -0.3,  --nl,
    0. , -0.1,  0. ,  0.1,  --nl,
    0. ,  0.3,  0. ,  0.5,  --nl,
    0. ,  0.7,  0. ,  0.9,  --nl,
    1. , -0.9,  1. , -0.7,  --nl,
    1. , -0.5,  1. , -0.3,  --nl,
    1. , -0.1,  1. ,  0.1,  --nl,
    1. ,  0.3,  1. ,  0.5,  --nl,
    1. ,  0.7,  1. ,  0.9,  --nl,
    0.0, -0.5,  0.2, -0.5,  --nl,
    0.4, -0.5,  0.6, -0.5,  --nl,
    0.8, -0.5,  1.0, -0.5,  --nl,
    0.0,  0.5,  0.2,  0.5,  --nl,
    0.4,  0.5,  0.6,  0.5,  --nl,
    0.8,  0.5,  1.0,  0.5,  --nl
  }
}

dat.rfcavity = {
  shape = {
    0.  ,  0.2,  0.25,  0.2,
    0.25,  0.8,  0.75,  0.8,
    0.75,  0.2,  1.  ,  0.2, --nl,
    0.  , -0.2,  0.25, -0.2,
    0.25, -0.8,  0.75, -0.8,
    0.75, -0.2,  1.  , -0.2, --nl
  }
}

dat.collimator = {
  shape = {
    0.,  0.8,  1.,  0.8,
    1.,  0.4,  0.,  0.4,
    0.,  0.8,  --nl,
    0., -0.8,  1., -0.8,
    1., -0.4,  0., -0.4,
    0., -0.8,
  }
}

dat.marker = {
  shape = {
    0., -0.9,
    0.,  0.9,
  }
}

dat.crabcavity = {
  shape = {
    0.  ,  0.2,  0.25,  0.2,
    0.25,  0.8,  0.75,  0.8,
    0.75,  0.2,  1.  ,  0.2, --nl,
    0.25,  0.2,  0.75,  0.8, --nl,
    0.  , -0.2,  0.25, -0.2,
    0.25, -0.8,  0.75, -0.8,
    0.75, -0.2,  1.  , -0.2, --nl,
    0.25, -0.8,  0.75, -0.2,
  }
}

--temp
dat.drift = {
  shape = {
  0,0
  }
}

dat.placeholder = dat.drift
dat.monitor     = dat.drift
dat.rbend       = dat.sbend
dat.decapole    = dat.drift
dat.dodecapole  = dat.drift
dat.wiggler     = dat.drift
dat.multipole   = dat.drift
dat.rfmultipole = dat.drift
dat.srotation   = dat.drift
dat.xrotation   = dat.drift
dat.yrotation   = dat.drift
dat.translate   = dat.drift
dat.twcavity    = dat.drift
dat.hmonitor    = dat.drift
dat.vmonitor    = dat.drift
dat.bpm         = dat.drift
dat.blm         = dat.drift
dat.assembly    = dat.drift
dat.bline       = dat.drift
dat.patch       = dat.drift

 -- sanity checks
do
  local element in MAD
  local skip = {
    slink=true, spause=true,
    --temp missing skip added -TODO
    element = true,
    sequence = true,
  }

  for _,e in pairs(element) do
    if e.l ~= nil and not skip[e.kind] then
      assert(dat[e.kind], "plot: missing shape detected")
      assert(dat[e.kind], e.kind)
    end
  end
end

-- end ------------------------------------------------------------------------o
return dat