Package: luajit 2.1-beta3

URL:
  http://luajit.org

Retrieve:
  cd lib ;
  git clone http://github.com/MethodicalAcceleratorDesign/LuaJIT.git luajit
  cd luajit ; git checkout mad-patch ; git pull
  (should be Already up-to-date.)

Sync MAD fork:
  GitHub sync v2.1
  git checkout v2.1
  git pull
  git checkout mad-patch
  git merge v2.1

Build: retrieve | prepare | update
  [macosx] export MACOSX_DEPLOYMENT_TARGET=10.8
  make clean
  make amalg PREFIX=`pwd`
  make install PREFIX=`pwd`
  [unixes] mv bin/luajit-2.1.0-beta3 bin/luajit
  [macosx] cp src/libluajit.a ../../bin/macosx
  [linux]  cp src/libluajit.a ../../bin/linux
  [msys64] mv bin/luajit-2.1.0-beta3.exe bin/luajit.exe
     "      mkdir -p bin/lua
     "      cp -a src/lua51.dll bin/
     "      cp -a share/luajit-2.1.0-beta3/jit bin/lua/
     "      cd src ; make libluajit.a ; cp libluajit.a ../../../bin/windows

Line for macosx (example):
make clean ; make -j9 amalg PREFIX=`pwd` ; make install PREFIX=`pwd` ; \
mv bin/luajit-2.1.0-beta3 bin/luajit ; cp src/libluajit.a ../../bin/macosx

Update of lua modules in MAD src/:
rm diff.out ; \
for i in ljit_*.lua ; do \
  echo "=== $i ===" >> diff.out ; \
  diff -w $i ../lib/luajit/src/`echo $i | sed -e 's+ljit_+jit/+'` >> diff.out ; \
done

Build & Update notes:
  : luajit binary cannot be moved! (but can be renamed)
  : if you move it, you have to compile and install it again
  : rerun commands with PREFIX=`pwd`
  : note that MAD with LuaJIT embedded can be moved.

MAD LuaJIT fork:
----------------
from within lib/luajit directory

+ listing branches
  git branch

+ changing branches
  git checkout mad-patch

+ pushing modifications
  git push --set-upstream origin mad-patch
  git push (if on the right branch)

+ create patches (e.g. after push)
  git diff --ignore-all-space upstream/v2.1 origin/mad-patch > ../patches/lj_mad.patch
+ create patches (e.g. before push with local changes on mad-patch)
  git diff --ignore-all-space upstream/v2.1 > ../patches/lj_mad.patch

+ updating LuaJIT v2.1 branch
  git pull upstream v2.1 (git fetch upstream + git merge upstream/v2.1)
  git commit             (?)
  git push               (for remote update)

+ visual diff
  git difftool --tool=tkdiff file

+ recreate the local branch pointing to v2.1
  git co -b v2.1 upstream/v2.1

LuaJIT v2.1:
------------

+ retrieve
  git clone http://luajit.org/git/luajit-2.0.git luajit

+ update the changes from origin
  git pull origin v2.1

+ local save of changes
  git ci -m "52 compat"

Debugging crash not happening in GDB (protected) environment):
--------------------------------------------------------------

// bottom of luaconf.h
#undef  assert
#define assert(c) ((void)( (c) || (__assert_fail(#c, __FILE__, __LINE__, __func__),1) ))

void __assert_fail(const char *assertion, const char *file, int line, const char *function);

// after includes in lj_parse.c (or any C file)
static volatile int __assert_foo;
void __assert_fail(const char *assertion, const char *file, int line,
                   const char *function)
{
  fprintf(stderr, "MY assertion failed: %s in %s, %s:%d\n",
          assertion, function, file, line);
  while (__assert_foo == 0); // LOOP!!!
}

With GDB: once assertion failed and looping, run: lldb -p PID  then bt

MAD LuaJIT patch: (obsolete)
-----------------
from within lib/luajit directory

+ prepare:
  git apply ../patches/lj_mad.patch

+ update:
  git apply -R ../patches/lj_mad.patch
  git pull
  git apply ../patches/lj_mad.patch

+ apply MAD patch:
  git apply ../patches/lj_mad.patch
  then rebuild LuaJIT as above.
  in casse of problem try
  git apply --allow-overlap --ignore-whitespace -v -3 ../patches/lj_mad.patch

+ revert MAD patches
  git apply -R ../patches/lj_mad.patch

+ updating through patches
  git apply -R ../patches/lj_mad.mypatch
  git pull
  git apply ../patches/lj_mad.mypatch
  git diff --ignore-space-change > ../patches/lj_mad.mypatch2
  diff ../patches/lj_mad.mypatch ../patches/lj_mad.mypatch2
  - check for minor changes or relocations
  rm ../patches/lj_mad.mypatch2
  - resolve conflicts + build + test
  git diff --ignore-space-change > ../patches/lj_mad.patch
  (from outside of luajit)
  git add ../patches/lj_mad.patch
  git ci -m "update of LuaJIT patch"
  git push

+ reset repo to LuaJIT origin/master (in case of problem)
  git fetch origin
  git reset --hard origin/master
  git clean -f
  git pull
  git status
  git diff  (should be empty)
  git apply ../patches/lj_mad.patch

patches are tracked by MAD github repo, not LuaJIT repo.
